spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/factory?useSSL=false&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.example.email.pojo

#  字符集编码 默认 UTF-8
spring.mail.default-encoding=UTF-8
# SMTP 服务器 host  qq邮箱的为 smtp.qq.com 端口 465 587
spring.mail.host=smtp.163.com
# SMTP 服务器端口 不同的服务商不一样
spring.mail.port=465
#   SMTP 服务器使用的协议
spring.mail.protocol=smtp

##必须配置
# SMTP服务器需要身份验证 所以 要配置用户密码
mail.fromMail.addr=

#接收端的用户邮箱名
mail.username=
mail.password=

#无法运行发送配置
## 发送端的用户邮箱名
#spring.mail.username=
## 发送端的密码 注意保密
#spring.mail.password=


# 指定mail会话的jndi名称 优先级较高   一般我们不使用该方式
#spring.mail.jndi-name=
# 这个比较重要 针对不同的SMTP服务器 都有自己的一些特色配置该属性 提供了这些配置的 key value 封装方案 例如 Gmail SMTP 服务器超时配置 spring.mail.properties.mail.smtp.timeout= 5000
#spring.mail.properties.<key> =
# 指定是否在启动时测试邮件服务器连接，默认为false
#spring.mail.test-connection=false

spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.imap.ssl.socketFactory.fallback=false
spring.mail.properties.mail.smtp.ssl.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true